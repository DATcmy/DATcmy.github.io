<html>

<!-- Mirrored from www.cmass.edu.hk/~ts/exercises/S5/McNetwork/Network03.htm by HTTrack Website Copier/3.x [XR&CO'2008], Wed, 19 Aug 2009 02:27:57 GMT -->
<head><meta name="author" content="Created with Hot Potatoes by Half-Baked Software, registered to Tam Simon."></meta><meta name="keywords" content="Hot Potatoes, Half-Baked Software, Windows, University of Victoria"></meta>
<title>
&#31532;&#21313;&#20108;&#31456; &#38651;&#33126;&#32178;&#32097;  &#32244;&#32722; 12.3
</title>

<script language="javascript" type="text/javascript">

//<![CDATA[

<!--

// BrowserCheck Object

function BrowserCheck() {
	var b = navigator.appName
//HBS extension
	this.mac = (navigator.appVersion.indexOf('Mac') != -1)
	if (b=="Netscape") this.b = "ns"
	else if (b=="Microsoft Internet Explorer") this.b = "ie"
	else this.b = b
	this.version = navigator.appVersion
	this.v = parseInt(this.version)
	this.ns = (this.b=="ns" && this.v>=4)
	this.ns4 = (this.b=="ns" && this.v==4)
	this.ns5 = (this.b=="ns" && this.v==5)
	this.ie = (this.b=="ie" && this.v>=4)
	this.ie4 = (this.version.indexOf('MSIE 4')>0)
	this.ie5 = (this.version.indexOf('MSIE 5')>0)
	this.min = (this.ns||this.ie)
	this.CRAPBrowser = (this.ie4 && this.mac); //Cannot Resolve Addresses Properly
}

is = new BrowserCheck();

var LocFolder = GetFolder(window.location.href);
function GetFolder(LocPath){
	LocPath = ReplaceStuff('\'','%27',LocPath);
	var i = LocPath.lastIndexOf('http://www.cmass.edu.hk/');
	if (i<0){i=LocPath.lastIndexOf('\\')};
	return LocPath.substring(0,i);
}

function CombineURLs(InURL){
	var i = InURL.indexOf('http://www.cmass.edu.hk/~ts/exercises/S5/');
	var s = LocFolder;
	while (i >- 1){
		s = GetFolder(s);
		InURL = InURL.substring(3,InURL.length);
		i = InURL.indexOf('http://www.cmass.edu.hk/~ts/exercises/S5/');
	}
	return s + '/' + InURL;
}

x = new Array();
function ResolveURLs(InText,Attribute){
	x.length=0;
	var Temp = InText.toLowerCase();
	var z;
	var AttLen = Attribute.length + 2;
	var y=Temp.lastIndexOf(Attribute + '="');
	while (y>-1){
		var sLoc = y+AttLen;
		if (Temp.substring(sLoc,sLoc+5) != 'http://www.cmass.edu.hk/~ts/exercises/S5/McNetwork/Network03.htm'){
			x[x.length]=new Array();
			x[x.length-1][0] = sLoc;
			z = Temp.indexOf('"',sLoc);
			x[x.length-1][1] = z;
			x[x.length-1][2] = InText.substring(sLoc,z);

		}
		Temp = Temp.substring(0,y);
		y=Temp.lastIndexOf(Attribute + '="');
	}
	for (var j=0; j<x.length; j++){
		InText = InText.substring(0,x[j][0]) + CombineURLs(x[j][2]) + InText.substring(x[j][1], InText.length);
	}
	return InText;
}



function ResolveAllURLs(Stuff){
	Stuff = ResolveURLs(Stuff,'href');
	Stuff = ResolveURLs(Stuff,'src');
	Stuff = ResolveURLs(Stuff,'parent.location');
	return Stuff;
}


var ExBGColor = '#bbbbee';



var PageBGColor = '#ffffff';



var NavBarColor = '#000066';


var TextColor = '#000000';
var CurrQNum = 0;
var ALetters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
var CorrectIndicator = ':-)';
var IncorrectIndicator = 'X';
var YourScoreIs = '&#20320;&#30340;&#24471;&#20998;&#25976;&#26159;';
var Tries = 0;
var CorrectChoices = 0;
var ContinuousScoring = true;
var CorrectFirstTime = '&#25152;&#26377;&#38988;&#30446;&#31532;&#19968;&#27425;&#20316;&#31572;&#27491;&#30906;&#30340;&#24471;&#20998;&#26159;';var ExerciseTitle = '&#31532;&#21313;&#20108;&#31456; &#38651;&#33126;&#32178;&#32097; &#32244;&#32722; 12.3';
var ExerciseSubtitle = '&#36984;&#25799;&#38988;&#32244;&#32722;';
var Instructions = '&#28858;&#27599;&#19968;&#38988;&#36984;&#20986;&#25152;&#26377;&#27491;&#30906;&#31572;&#26696;'; //'';
var ShuffleQs = true;
var ShuffleAs = true;
var DefaultRight = '&#27491;&#30906;';
var DefaultWrong = '&#37679;&#20102;! &#20877;&#35430;&#19968;&#27425;';
var QsToShow = 16;
var ShowOneByOne = true;
var ReadingURL = '';
var EraseFeedback = true;
var Score = 0;

var PreviousPage = history.length;







var NavBar='';


NavBar+='<tr><form name="NavButtons1" action=""><td bgcolor="#000066" align="center">';
NavBar+='<font face="Geneva,Arial" size="-1">';


NavBar+='<input type="button" value="&#33267;&#32178;&#38913;" onclick=\'parent.location="bkhome.htm"\'></input>';


NavBar+='</font></td></form></tr>';
if (is.CRAPBrowser){NavBar=ResolveAllURLs(NavBar)};


var TitleCode = '<tr><td align="center" valign="middle" bgcolor="#ffffff">';
TitleCode += '<font size="+1" face="Geneva,Arial" color="#000033">' + ExerciseTitle + '</font><br />';
TitleCode += '<font size="-1" face="Geneva,Arial" color="#000033">' + ExerciseSubtitle + '<br />';
TitleCode += '</font></td></tr>';

var QButtonsOpener = '<table border="0" width="85%" cellpadding="10">';
QButtonsOpener += '<tr><td align="center" valign="middle"><form>';
QButtonsOpener += '<font size="+1"><input type="button" value="&lt;=" onclick="parent.ChangeQ(-1)"></input>';
var QButtonsCloser = '<input type="button" value="=&gt;" onclick="parent.ChangeQ(1)"></input>';
QButtonsCloser += '</font></form></td></tr></table>';

var TableOpener = '<form name="QForm">';
TableOpener += '<table border="0" width="85%">';
var QRow = '<tr><td valign="top" bgcolor="#bbbbee" align="right">';
QRow += '<font size="+1" face="Geneva,Arial" color="#000000">[QNumber]</font></td>';
QRow += '<td colspan="3" valign="top" bgcolor="#bbbbee"><font size="-1" face="Geneva,Arial" color="#000000">[Question]<br />&nbsp;';
QRow += '</font></td></tr>';

var ARow = '<tr><td></td><td valign="top" bgcolor="#bbbbee"><input type="text" value=" " size="3" name="FB_[QNum]_[ANum]"></input></td>';
ARow += '<td valign="top" bgcolor="#bbbbee"><input type="button" value="[ALetter]" OnClick="parent.CheckAnswer([QNum],[ANum])"></input></td>';
ARow += '<td width="100%" bgcolor="#bbbbee"><font size="-1" face="Geneva,Arial" color="#000000">[Ans]</font></td></tr>';

var MARow = '<tr><td></td><td valign="top" bgcolor="#bbbbee" colspan="3"><input type="checkbox" name="A_[QNum]_[ANum]" value="[Correct]"></input>';
MARow += '<font size="-1" face="Geneva,Arial" color="#000000">[Ans]</font></td></tr>';

var CheckButton = '<tr><td></td><td valign="top" bgcolor="#bbbbee" ><input type="button" value="&#26680;&#23565;"';
CheckButton += ' onclick="parent.CheckMulti([QNum])"></input></td></tr>';

TableCloser = '</table></form>';

function GoBack(){
	var BackSkip = history.length - PreviousPage;
	if (BackSkip > 0){
		history.go((BackSkip+1)*-1);
	}
	else{
		parent.history.back();
	}
}

function ReduceItems(){
	var ItemToDump=0;
	var j=0;
	while (I.length > QsToShow){
		ItemToDump = Math.floor(I.length*Math.random());
		for (j=ItemToDump; j<(I.length-1); j++){
			I[j] = I[j+1];
		}
		I.length = I.length-1;
	}
}

function Shuffle(InArray){
	Temp = new Array();
	var Len = InArray.length;

	var j = Len;

	for (var i=0; i<Len; i++){
		Temp[i] = InArray[i];
	}

	for (i=0; i<Len; i++){
		Num = Math.floor(j  *  Math.random());
		InArray[i] = Temp[Num];

		for (var k=Num; k < j; k++) {
			Temp[k] = Temp[k+1];
		}
		j--;
	}
	return InArray;
}

function WriteFeedback(Feedback) {
//Build the output string
	var OutString = '';
	OutString += '<html>';
	OutString += '<body  background="" bgcolor="#ffffff" text="#000000" link="#0000ff" vlink="#0000cc">';
	OutString += '<center><table border="0" cellpadding="5" cellspacing="1" width="85%">';
	OutString += NavBar;
	if (Feedback.length>0){
		OutString += '<tr><td bgcolor="#bbbbee" align="center">'; 
		OutString += '<font face="Geneva,Arial" size="-1" color="#000000">';
		OutString += Feedback;
		OutString += '</font></td></tr>'
	}
	OutString += '</table></center></body></html>';

	if (is.CRAPBrowser){OutString=ResolveAllURLs(OutString);}

//Write it to the frame
	TopFrame.document.clear();
	TopFrame.document.open();
	TopFrame.document.write(OutString);
	TopFrame.document.close();
}

function StartUp(){




//Reduce array if required
	if (QsToShow < I.length){
		ReduceItems();
	}

//Shuffle stuff if required

	if (ShuffleQs == true){
		I = Shuffle(I);
	}

	if (ShuffleAs == true){
		for (var i=0; i<I.length; i++){
			I[i][1] = Shuffle(I[i][1]);
		}
	}

//Create arrays
	CreateStatusArrays();



//Show the first question or all of them
	if (ShowOneByOne == false){
		ShowAllQs();
	}
	else{
		ShowQuestion(CurrQNum);
	}

//Write the top frame
	WriteFeedback(Instructions);
}


I = new Array();

I[0] = new Array();
I[0][0]='\u5FAE\u6CE2\u50B3\u8F38';
I[0][1] = new Array();
I[0][1][0] = new Array();
I[0][1][0][0]='\u4E0D\u6613\u53D7\u7269\u4EF6\u963B\u7919\u53CA\u8DDD\u96E2\u5F71\u97FF\uFF0C\u9577\u8DDD\u96E2\u50B3\u8F38\u4EA6\u7121\u9700\u52A0\u8A2D\u4E2D\u8F49\u7AD9\u3002';
I[0][1][0][1]='';
I[0][1][0][2] = 0;
I[0][1][1] = new Array();
I[0][1][1][0]='\u5FAE\u6CE2\u662F\u4E00\u7A2E\u96FB\u78C1\u6CE2';
I[0][1][1][1]='';
I[0][1][1][2] = 1;
I[0][1][2] = new Array();
I[0][1][2][0]='\u50B3\u9001\u4FE1\u865F\u6642\uFF0C\u5148\u628A\u96FB\u4FE1\u865F\u8F49\u8B8A\u6210\u5FAE\u6CE2';
I[0][1][2][1]='';
I[0][1][2][2] = 1;
I[0][1][3] = new Array();
I[0][1][3][0]='\u4EE5\u5149\u901F\u76F4\u7DDA\u50B3\u9001';
I[0][1][3][1]='';
I[0][1][3][2] = 1;
I[0][2] = 1;

I[1] = new Array();
I[1][0]='\u4EBA\u9020\u885B\u661F\u50B3\u9001 <img src="..//McNetwork/Pic01/TransSatalite.jpg" alt="TransSatalite.jpg" width="150" height="160" align="right" border="0"></img>';
I[1][1] = new Array();
I[1][1][0] = new Array();
I[1][1][0][0]='\u4F5C\u70BA\u5FAE\u6CE2\u50B3\u9001\u7AD9';
I[1][1][0][1]='';
I[1][1][0][2] = 1;
I[1][1][1] = new Array();
I[1][1][1][0]='\u5C07\u4FE1\u865F\u8ABF\u6574\u53CA\u64F4\u5927';
I[1][1][1][1]='';
I[1][1][1][2] = 1;
I[1][1][2] = new Array();
I[1][1][2][0]='\u53EF\u50B3\u8F38\u5C0F\u91CF\u7684\u4FE1\u606F';
I[1][1][2][1]='';
I[1][1][2][2] = 0;
I[1][1][3] = new Array();
I[1][1][3][0]='\u7121\u9700\u5229\u7528\u706B\u7BAD\u767C\u5C04\u885E\u661F';
I[1][1][3][1]='';
I[1][1][3][2] = 0;
I[1][2] = 1;

I[2] = new Array();
I[2][0]='\u63A1\u7528\u56FA\u5B9A\u7684\u96FB\u8DEF\u7DDA\u7DB2\u7D61<br />';
I[2][1] = new Array();
I[2][1][0] = new Array();
I[2][1][0][0]='\u56FA\u5B9A\u7DB2\u7D61\u96FB\u8A71 ';
I[2][1][0][1]='';
I[2][1][0][2] = 1;
I[2][1][1] = new Array();
I[2][1][1][0]='\u6D41\u52D5\u96FB\u8A71 ';
I[2][1][1][1]='';
I[2][1][1][2] = 0;
I[2][1][2] = new Array();
I[2][1][2][0]='\u96FB\u5B50\u90F5\u4EF6';
I[2][1][2][1]='';
I[2][1][2][2] = 0;
I[2][1][3] = new Array();
I[2][1][3][0]='\u8FA6\u516C\u5BA4\u7DB2\u7D61 ';
I[2][1][3][1]='';
I[2][1][3][2] = 0;
I[2][1][4] = new Array();
I[2][1][4][0]='\u8996\u50CF\u6703\u8B70 ';
I[2][1][4][1]='';
I[2][1][4][2] = 0;
I[2][2] = 0;

I[3] = new Array();
I[3][0]='\u5229\u7528\u7121\u7DDA\u96FB\u6CE2\u4F86\u50B3\u8F38\u8CC7\u8A0A\u548C\u6578\u64DA';
I[3][1] = new Array();
I[3][1][0] = new Array();
I[3][1][0][0]='\u56FA\u5B9A\u7DB2\u7D61\u96FB\u8A71 ';
I[3][1][0][1]='';
I[3][1][0][2] = 0;
I[3][1][1] = new Array();
I[3][1][1][0]='\u6D41\u52D5\u96FB\u8A71 ';
I[3][1][1][1]='';
I[3][1][1][2] = 1;
I[3][1][2] = new Array();
I[3][1][2][0]='\u96FB\u5B50\u90F5\u4EF6';
I[3][1][2][1]='';
I[3][1][2][2] = 0;
I[3][1][3] = new Array();
I[3][1][3][0]='\u8FA6\u516C\u5BA4\u7DB2\u7D61 ';
I[3][1][3][1]='';
I[3][1][3][2] = 0;
I[3][1][4] = new Array();
I[3][1][4][0]='\u8996\u50CF\u6703\u8B70 ';
I[3][1][4][1]='';
I[3][1][4][2] = 0;
I[3][2] = 0;

I[4] = new Array();
I[4][0]='\u7528\u6236\u53EF\u628A\u66F8\u4FE1\u3001\u8CC7\u8A0A\u53CA\u6578\u64DA\u901A\u904E\u4E92\u806F\u7DB2\u50B3\u8F38 ';
I[4][1] = new Array();
I[4][1][0] = new Array();
I[4][1][0][0]='\u56FA\u5B9A\u7DB2\u7D61\u96FB\u8A71 ';
I[4][1][0][1]='';
I[4][1][0][2] = 0;
I[4][1][1] = new Array();
I[4][1][1][0]='\u6D41\u52D5\u96FB\u8A71 ';
I[4][1][1][1]='';
I[4][1][1][2] = 0;
I[4][1][2] = new Array();
I[4][1][2][0]='\u96FB\u5B50\u90F5\u4EF6';
I[4][1][2][1]='';
I[4][1][2][2] = 1;
I[4][1][3] = new Array();
I[4][1][3][0]='\u8FA6\u516C\u5BA4\u7DB2\u7D61 ';
I[4][1][3][1]='';
I[4][1][3][2] = 0;
I[4][1][4] = new Array();
I[4][1][4][0]='\u8996\u50CF\u6703\u8B70 ';
I[4][1][4][1]='';
I[4][1][4][2] = 0;
I[4][2] = 0;

I[5] = new Array();
I[5][0]='\u591A\u90E8\u96FB\u8166\u4F7F\u7528\u5340\u57DF\u7DB2\u7D61\u4F86\u5171\u7528\u786C\u4EF6\u3001\u5171\u7528\u6216\u4EA4\u63DB\u6A94\u6848<br />';
I[5][1] = new Array();
I[5][1][0] = new Array();
I[5][1][0][0]='\u56FA\u5B9A\u7DB2\u7D61\u96FB\u8A71 ';
I[5][1][0][1]='';
I[5][1][0][2] = 0;
I[5][1][1] = new Array();
I[5][1][1][0]='\u6D41\u52D5\u96FB\u8A71 ';
I[5][1][1][1]='';
I[5][1][1][2] = 0;
I[5][1][2] = new Array();
I[5][1][2][0]='\u96FB\u5B50\u90F5\u4EF6';
I[5][1][2][1]='';
I[5][1][2][2] = 0;
I[5][1][3] = new Array();
I[5][1][3][0]='\u8FA6\u516C\u5BA4\u7DB2\u7D61 ';
I[5][1][3][1]='';
I[5][1][3][2] = 1;
I[5][1][4] = new Array();
I[5][1][4][0]='\u8996\u50CF\u6703\u8B70 ';
I[5][1][4][1]='';
I[5][1][4][2] = 0;
I[5][2] = 0;

I[6] = new Array();
I[6][0]='\u900F\u904E\u96FB\u5B50\u7DDA\u8DEF(\u4F8B\u5982\uFF1A\u96FB\u8A71\u7DDA\u3001\u4E92\u806F\u7DB2\u3001\u5149\u5C0E\u7E96\u7DAD\u96FB\u7E9C\u3001\u5FAE\u6CE2\u6216\u4EBA\u9020\u885B\u661F\u7B49)\u548C\u8996\u50CF\u8A2D\u5099(\u4F8B\u5982\uFF1A\u651D\u9304\u93E1\u982D\u548C\u50B3\u8072\u5668)\uFF0C\u4EE5\u5716\u8C61\u53CA\u8072\u97F3\u8207\u9060\u65B9\u7684\u4F7F\u7528\u8005\u9032\u884C\u6703\u8B70\u3002 <br />';
I[6][1] = new Array();
I[6][1][0] = new Array();
I[6][1][0][0]='\u56FA\u5B9A\u7DB2\u7D61\u96FB\u8A71 ';
I[6][1][0][1]='';
I[6][1][0][2] = 0;
I[6][1][1] = new Array();
I[6][1][1][0]='\u6D41\u52D5\u96FB\u8A71 ';
I[6][1][1][1]='';
I[6][1][1][2] = 0;
I[6][1][2] = new Array();
I[6][1][2][0]='\u96FB\u5B50\u90F5\u4EF6';
I[6][1][2][1]='';
I[6][1][2][2] = 0;
I[6][1][3] = new Array();
I[6][1][3][0]='\u8FA6\u516C\u5BA4\u7DB2\u7D61 ';
I[6][1][3][1]='';
I[6][1][3][2] = 0;
I[6][1][4] = new Array();
I[6][1][4][0]='\u8996\u50CF\u6703\u8B70 ';
I[6][1][4][1]='';
I[6][1][4][2] = 1;
I[6][2] = 0;

I[7] = new Array();
I[7][0]='\u9999\u6E2F\u73FE\u6642\u8F03\u5E38\u7528\u7684\u6D41\u52D5\u96FB\u8A71\u7CFB\u7D71\u6709<br />';
I[7][1] = new Array();
I[7][1][0] = new Array();
I[7][1][0][0]='\u985E\u6BD4CDMA';
I[7][1][0][1]='';
I[7][1][0][2] = 0;
I[7][1][1] = new Array();
I[7][1][1][0]='\u985E\u6BD4GSM';
I[7][1][1][1]='';
I[7][1][1][2] = 0;
I[7][1][2] = new Array();
I[7][1][2][0]='\u6578\u4F4DCDMA';
I[7][1][2][1]='';
I[7][1][2][2] = 1;
I[7][1][3] = new Array();
I[7][1][3][0]='\u6578\u4F4DGSM';
I[7][1][3][1]='';
I[7][1][3][2] = 1;
I[7][2] = 1;

I[8] = new Array();
I[8][0]='\u6D41\u52D5\u96FB\u8A71\u7684\u904B\u4F5C';
I[8][1] = new Array();
I[8][1][0] = new Array();
I[8][1][0][0]='\u5C07\u5730\u9762\u5206\u70BA\u591A\u500B\u8F03\u5C0F\u7684\u5340\u57DF';
I[8][1][0][1]='';
I[8][1][0][2] = 1;
I[8][1][1] = new Array();
I[8][1][1][0]='\u5C07\u5730\u9762\u5206\u70BA3\u500B\u8F03\u5927\u7684\u5340\u57DF';
I[8][1][1][1]='';
I[8][1][1][2] = 0;
I[8][1][2] = new Array();
I[8][1][2][0]='\u6BCF\u4E00\u500B\u5340\u57DF\u5167\u88DD\u8A2D\u7121\u7DDA\u96FB\u6CE2\u6536\u767C\u7AD9';
I[8][1][2][1]='';
I[8][1][2][2] = 1;
I[8][1][3] = new Array();
I[8][1][3][0]='\u96FB\u8A71\u7531\u4E00\u500B\u5340\u57DF\u79FB\u52D5\u5230\u53E6\u4E00\u500B\u5340\u57DF\uFF0C\u5FC5\u9808\u81EA\u52D5\u5730\u5C07\u7DDA\u8DEF\u5F9E\u4E00\u500B\u5340\u57DF\u79FB\u5230\u53E6\u4E00\u500B\u5340\u57DF\uFF0C\u5426\u5247\u901A\u8A0A\u4FBF\u6703\u4E2D\u65B7 ';
I[8][1][3][1]='';
I[8][1][3][2] = 1;
I[8][1][4] = new Array();
I[8][1][4][0]='\u96FB\u8A71\u81EA\u52D5\u5730\u7531\u7B2C1\u500B\u5340\u57DF\u79FB\u52D5\u5230\u7B2C2\u500B\u5340\u57DF\uFF0C\u518D\u5230\u7B2C3\u500B\u5340\u57DF, \u5FAA\u74B0\u4E0D\u606F\u5C0B\u627E\u7DDA\u8DEF\uFF0C\u5426\u5247\u901A\u8A0A\u4FBF\u6703\u4E2D\u65B7 ';
I[8][1][4][1]='';
I[8][1][4][2] = 0;
I[8][2] = 0;

I[9] = new Array();
I[9][0]='\u4E0B\u5217\u90A3\u4E9B\u95A2\u65BC\u96FB\u5B50\u90F5\u4EF6\u662F\u6B63\u78BA';
I[9][1] = new Array();
I[9][1][0] = new Array();
I[9][1][0][0]='@\u5F8C\u9762\u7684\u5B57\u4E32\u4EE3\u8868\u4F3A\u670D\u5668\u96FB\u8166\u540D\u7A31';
I[9][1][0][1]='';
I[9][1][0][2] = 1;
I[9][1][1] = new Array();
I[9][1][1][0]='@\u524D\u9762\u7684\u5B57\u4E32\u4EE3\u8868\u7528\u6236';
I[9][1][1][1]='';
I[9][1][1][2] = 1;
I[9][1][2] = new Array();
I[9][1][2][0]='@\u524D\u9762\u7684\u5B57\u4E32\u4EE3\u8868\u96FB\u8166\u540D\u7A31';
I[9][1][2][1]='';
I[9][1][2][2] = 0;
I[9][1][3] = new Array();
I[9][1][3][0]='@\u5F8C\u9762\u7684\u5B57\u4E32\u4EE3\u8868\u7528\u6236';
I[9][1][3][1]='';
I[9][1][3][2] = 0;
I[9][2] = 1;

I[10] = new Array();
I[10][0]='\u96FB\u5B50\u90F5\u4EF6\u53EF\u7528<br />';
I[10][1] = new Array();
I[10][1][0] = new Array();
I[10][1][0][0]='\u96FB\u90F5\u8EDF\u4EF6';
I[10][1][0][1]='';
I[10][1][0][2] = 1;
I[10][1][1] = new Array();
I[10][1][1][0]='\u7DB2\u9801\u96FB\u90F5';
I[10][1][1][1]='';
I[10][1][1][2] = 1;
I[10][1][2] = new Array();
I[10][1][2][0]='ICQ';
I[10][1][2][1]='';
I[10][1][2][2] = 0;
I[10][1][3] = new Array();
I[10][1][3][0]='\u8996\u50CF\u6703\u8B70';
I[10][1][3][1]='';
I[10][1][3][2] = 0;
I[10][2] = 1;

I[11] = new Array();
I[11][0]='\u53F3\u5716\u662F<img src="..//McNetwork/Pic01/Ethernet.jpg" alt="Ethernet.jpg" width="250" height="133" align="right" border="0"></img>';
I[11][1] = new Array();
I[11][1][0] = new Array();
I[11][1][0][0]='\u7528\u540C\u8EF8\u96FB\u7E9C\u63A5\u6210\u7684\u661F\u5F62\u4EE5\u592A\u7DB2 \u7DB2\u7D61';
I[11][1][0][1]='';
I[11][1][0][2] = 0;
I[11][1][1] = new Array();
I[11][1][1][0]='\u7528\u540C\u8EF8\u96FB\u7E9C\u63A5\u6210\u7684\u74B0\u5F62\u4EE5\u592A\u7DB2 \u7DB2\u7D61';
I[11][1][1][1]='';
I[11][1][1][2] = 0;
I[11][1][2] = new Array();
I[11][1][2][0]='\u7528\u96D9\u7D5E\u7DDA\u96FB\u7E9C\u63A5\u6210\u7684\u661F\u5F62\u4EE5\u592A\u7DB2 \u7DB2\u7D61';
I[11][1][2][1]='';
I[11][1][2][2] = 1;
I[11][1][3] = new Array();
I[11][1][3][0]='\u7528\u96D9\u7D5E\u7DDA\u96FB\u7E9C\u63A5\u6210\u7684\u74B0\u5F62\u4EE5\u592A\u7DB2 \u7DB2\u7D61';
I[11][1][3][1]='';
I[11][1][3][2] = 0;
I[11][2] = 0;

I[12] = new Array();
I[12][0]='\u4E0B\u5217\u90A3\u4E9B\u95A2\u65BC\u8996\u50CF\u6703\u8B70\u662F\u6B63\u78BA\u7684';
I[12][1] = new Array();
I[12][1][0] = new Array();
I[12][1][0][0]='\u5FC5\u9808\u53EF\u4EE5\u9AD8\u901F\u50B3\u9001\u96FB\u5B50\u4FE1\u606F';
I[12][1][0][1]='';
I[12][1][0][2] = 1;
I[12][1][1] = new Array();
I[12][1][1][0]='\u7121\u9700\u8996\u50CF\u8A2D\u5099';
I[12][1][1][1]='';
I[12][1][1][2] = 0;
I[12][1][2] = new Array();
I[12][1][2][0]='\u4EE5\u5716\u8C61\u53CA\u8072\u97F3\u8207\u9060\u65B9\u7684\u4F7F\u7528\u8005\u9032\u884C\u6703\u8B70';
I[12][1][2][1]='';
I[12][1][2][2] = 1;
I[12][1][3] = new Array();
I[12][1][3][0]='\u900F\u904E\u96FB\u5B50\u7DDA\u8DEF\u9032\u884C\u6703\u8B70';
I[12][1][3][1]='';
I[12][1][3][2] = 0;
I[12][2] = 1;

I[13] = new Array();
I[13][0]='WAP \u7684\u610F\u7FA9\u662F';
I[13][1] = new Array();
I[13][1][0] = new Array();
I[13][1][0][0]='\u5229\u7528\u6D41\u52D5\u96FB\u8A71\u95B1\u8B80\u4E92\u806F\u7DB2\u7DB2\u9801\u548C\u6536\u767C\u96FB\u5B50\u90F5\u4EF6';
I[13][1][0][1]='';
I[13][1][0][2] = 1;
I[13][1][1] = new Array();
I[13][1][1][0]='\u7121\u7DDA\u61C9\u7528\u5354\u5B9A ';
I[13][1][1][1]='';
I[13][1][1][2] = 1;
I[13][1][2] = new Array();
I[13][1][2][0]='\u4F7F\u7528WML(Wireless Markup Language)\u8A9E\u8A00<br /><br />';
I[13][1][2][1]='';
I[13][1][2][2] = 1;
I[13][1][3] = new Array();
I[13][1][3][0]='\u4F7F\u7528HTML\u8A9E\u8A00';
I[13][1][3][1]='';
I[13][1][3][2] = 0;
I[13][1][4] = new Array();
I[13][1][4][0]='WAP\u96FB\u8A71\u7684\u8A18\u61B6\u5BB9\u91CF\u8207\u7192\u5E55\u5927\u5C0F\u4E0D\u53D7\u9650\u5236, \u4F7F\u7528\u65B9\u4FBF';
I[13][1][4][1]='';
I[13][1][4][2] = 0;
I[13][2] = 1;

I[14] = new Array();
I[14][0]='\u7B2C\u4E09\u4EE3\u79FB\u52D5\u96FB\u8A71\u7CFB\u7D71';
I[14][1] = new Array();
I[14][1][0] = new Array();
I[14][1][0][0]='\u7C21\u7A31\u70BA3G';
I[14][1][0][1]='';
I[14][1][0][2] = 1;
I[14][1][1] = new Array();
I[14][1][1][0]='\u4EE5\u6BCF\u79D22\u767E\u842C\u4F4D\u5143 (2 Mbps) \u7684\u901F\u5EA6\u4F5C\u7121\u7DDA\u9060\u8DDD\u96E2\u50B3\u9001\u8CC7\u6599';
I[14][1][1][1]='';
I[14][1][1][2] = 1;
I[14][1][2] = new Array();
I[14][1][2][0]='\u6BD4\u76EE\u524D\u7684\u4E00\u822C\u6D41\u52D5\u96FB\u8A71\u50B3\u9001\u901F\u5EA6\u5FEB10\u500D\u4EE5\u4E0A';
I[14][1][2][1]='';
I[14][1][2][2] = 0;
I[14][1][3] = new Array();
I[14][1][3][0]='\u7531\u65BC\u50B3\u9001\u901F\u5EA6\u6BD4\u73FE\u6642\u5FEB\u4E0D\u5F88\u591A(10\u500D), \u56FA\u672A\u80FD\u666E\u904D\u4F7F\u7528';
I[14][1][3][1]='';
I[14][1][3][2] = 0;
I[14][2] = 1;

I[15] = new Array();
I[15][0]='\u4E0B\u5217\u90A3\u4E9B\u95DC\u65BC\u85CD\u7259(bluetooth)\u6280\u8853\u662F\u6B63\u78BA\u7684';
I[15][1] = new Array();
I[15][1][0] = new Array();
I[15][1][0][0]='\u77ED\u8DDD( \u7D0430\u7C73)\u7121\u7DDA\u50B3\u8F38\u6280\u8853 ';
I[15][1][0][1]='';
I[15][1][0][2] = 1;
I[15][1][1] = new Array();
I[15][1][1][0]='\u4F7F\u75282.45GHz ( 2.402 ~ 2.480 GHz ) \u7684\u7121\u7DDA\u96FB\u983B\u5E36';
I[15][1][1][1]='';
I[15][1][1][2] = 1;
I[15][1][2] = new Array();
I[15][1][2][0]='\u4E0D\u9069\u5408\u8A9E\u97F3\u7684\u901A\u8A0A';
I[15][1][2][1]='';
I[15][1][2][2] = 0;
I[15][1][3] = new Array();
I[15][1][3][0]='\u63D0\u4F9B\u4E00\u5C0D\u4E00\u6216\u4E00\u5C0D\u591A\u7684\u9023\u7D50\u65B9\u6CD5\uFF0C\u6240\u4EE5\u80FD\u5920\u5EFA\u7ACB\u6578\u500B\u5FAE\u5F62\u7DB2\u7D61\uFF0C\u4E26\u76F8\u4E92\u9023\u7D50\u5728\u4E00\u8D77\u6210\u70BA\u81E8\u6642\u7DB2\u8DEF\u3002<br />';
I[15][1][3][1]='';
I[15][1][3][2] = 1;
I[15][2] = 1;


Status = new Array();


function CreateStatusArrays(){
	for (var x=0; x<I.length; x++){
		Status[x] = new Array();
		Status[x][0] = 0; // Question not done yet
		Status[x][1] = new Array(); //for tracking whether answers chosen
		for (var y=0; y<I[x][1].length; y++){
			Status[x][1][y] = '0'; //Answers not chosen yet
		}
		Status[x][2] = 0; //Wrong tries at this question so far
		Status[x][3] = 0; //For storing score out of one on this question
	}
}

function UpdateQuestionStatus(QNum){
	if (Status[QNum][2] >= Status[QNum][1].length-1){
		Status[QNum][0] = 1;
		for (var i=0; i<Status[QNum][1].length; i++){
			if (Status[QNum][1][i] == '0'){
				Status[QNum][1][i] = 'R';
			}
		}
	}
}

function ReplaceStuff(Token, Replacement, InString){
	var i = InString.indexOf(Token);
	var FirstBit = '';
	var LastBit = '';
	while (i>-1){
		FirstBit = InString.substring(0, i);
		LastBit = InString.substring(i + Token.length, InString.length);	
		InString = FirstBit + Replacement + LastBit;
		i = InString.indexOf(Token);
	}
	return InString;
}

function ChangeQ(ChangeBy){
	var NewNum = CurrQNum + ChangeBy;
	if ((NewNum >= 0)&&(NewNum<I.length)){
		CurrQNum = NewNum;
		ShowQuestion(CurrQNum);
	}
	var CurrScore = '';
	if ((ContinuousScoring == true)&&(EraseFeedback == true)){
		CalculateScore();
		var CurrScore = YourScoreIs + ' ' + Score + '%.';
		WriteFeedback(CurrScore);
	}
}

function BuildQuestion(QNum){
	if (I[QNum][2] == 0){
		var Temp = ReplaceStuff('[Question]', I[QNum][0], QRow);

		var AnsRows = '';
		for (var i=0; i<I[QNum][1].length; i++){
			TempAns = ARow;
			TempAns = ReplaceStuff('[ANum]', i, TempAns);
			TempAns = ReplaceStuff('[ALetter]', ' ' + ALetters.charAt(i) + ' ', TempAns);
			TempAns = ReplaceStuff('[Ans]', I[QNum][1][i][0], TempAns);
			AnsRows += TempAns;
		}
		Temp += AnsRows;
		Temp = ReplaceStuff('[QNumber]', QNum+1, Temp);
		Temp = ReplaceStuff('[QNum]', QNum, Temp);
	}
	else{
		var Temp = ReplaceStuff('[Question]', I[QNum][0], QRow);
		var AnsRows = '';
		for (var i=0; i<I[QNum][1].length; i++){
			TempAns = MARow;
			TempAns = ReplaceStuff('[ANum]', i, TempAns);
			TempAns = ReplaceStuff('[Correct]', I[QNum][1][i][2], TempAns);
			TempAns = ReplaceStuff('[Ans]', I[QNum][1][i][0], TempAns);
			AnsRows += TempAns;
		}
		Temp += AnsRows;
		Temp += CheckButton;
		Temp = ReplaceStuff('[QNumber]', QNum+1, Temp);
		Temp = ReplaceStuff('[QNum]', QNum, Temp);
	}
	return Temp;
}

function DisplayExercise(StuffToDisplay){
//Build the output string
	var OutString = '';
	OutString += '<html>';
	OutString += '<body  background="" bgcolor="#ffffff" text="#000000" link="#0000ff" vlink="#0000cc">';
	OutString += '<center><table border="0" cellpadding="5" cellspacing="1" width="85%">';
	OutString += TitleCode; 
	OutString += '<tr><td bgcolor="#bbbbee" align="center">'; 
	OutString += '<font face="Geneva,Arial" size="-1">';
	OutString += StuffToDisplay;
	OutString += '</font></td></tr>';
	OutString += NavBar;
	OutString += '</table></center></body></html>';

	if (is.CRAPBrowser){OutString=ResolveAllURLs(OutString);}

//Write it to the frame
	BottomFrame.document.clear();
	BottomFrame.document.open();
	BottomFrame.document.write(OutString);
	BottomFrame.document.close();
}


function ShowAllQs(){
	var Output = '';
	for (var i=0; i<I.length-1; i++){
		Output = Output + BuildQuestion(i);
		Output = Output + '<tr><td colspan="4"><hr></hr></td></tr>';
	}
	Output = Output + BuildQuestion(I.length-1);
	Output = TableOpener + Output + TableCloser;
	DisplayExercise(Output);
}

function ShowQuestion(QNum){
//First, create the Q number readout at the top
	var Readout = (QNum+1) + '/' + I.length;
	while (Readout.length < 7){
		Readout = ' ' + Readout + ' ';
	}
	Readout = QButtonsOpener + Readout + QButtonsCloser;

	var Output = BuildQuestion(QNum);

	Output = TableOpener + Output + TableCloser;

	DisplayExercise(Readout + Output);

//Mark the answers already done
	for (i=0; i<Status[QNum][1].length; i++){
		if (Status[QNum][1][i] == 'R'){
			MarkAnswer(QNum,i,true)
		}
		if (Status[QNum][1][i] == 'W'){
			MarkAnswer(QNum,i,false)
		}
		if (Status[QNum][1][i] == 'C'){
			CheckCheckbox(QNum,i);
		}
	}
//Eliminate feedback from previous question
	if (EraseFeedback == true){
		WriteFeedback('');
	}
}

function CheckMulti(QNum){
	var TotWrong = 0;
	var Output = '';
	var TotAns = I[QNum][1].length;
	for (var i=TotAns-1; i>=0; i--){
//Find any incorrect choices

		var b = eval('BottomFrame.document.QForm.A_' + QNum + '_' + i);

		if (b != null){
//if it's wrong, count it
			if (b.checked == true){
				Status[QNum][1][i] = 'C';
			}
			else{
				Status[QNum][1][i] = 'U';
			}
			if (((b.checked == true) && (b.value == "0"))||((b.checked == false)&&(b.value == "1"))){
				TotWrong++;
			}
		}				
	}

	if (TotWrong == 0){
		Output = DefaultRight;
	}
	else{
		Output = DefaultWrong + '<br />' + (TotAns-TotWrong) + '/' + TotAns;
	}

//If you haven't tried the question before
	if (Status[QNum][0] == 0){
		if (TotWrong > 0){
			Status[QNum][2]++;
		}
		if (TotWrong == 0){
			Status[QNum][0] = 1;
//Calculate the score for this question as a floating-point fraction of 1
			Status[QNum][3] =  ((Status[QNum][1].length - Status[QNum][2]) - 1) / (Status[QNum][1].length - 1);
//If less than zero, set to zero
			if (Status[QNum][3] < 0){Status[QNum][3] = 0;}
		}
	}

//Check whether the quiz is finished
	var Finished = true;
	for (var i=0; i<Status.length; i++){
		if (Status[i][0] == 0){Finished = false;}
	}

//Calculate the score if needed
		
	if (Status[QNum][0] == 1){
		if ((Finished==true)||(ContinuousScoring==true)){
			CalculateScore();
			Output = Output + '<br />' + YourScoreIs + ' ' + Score + '%.';
		}

		if (Finished == true){
			EraseFeedback = false;
			var CFT = 0;
			for (i=0; i<I.length; i++){
				if (Status[i][2] == 0){
					CFT++;
				}
			}
		Output += '<br />' + CorrectFirstTime + CFT + '/' + I.length;

		}
	}

//Show the feedback
	if (Output.length > 0){
		WriteFeedback(Output);
	}

}

function CheckAnswer(QNum, ANum){
	var Output = I[QNum][1][ANum][1];

	if (Output==''){
		if (I[QNum][1][ANum][2] == 1){
			Output = DefaultRight;
		}
		else{
			Output = DefaultWrong;
		}
	}

//If it's not been previously answered correctly
	if (Status[QNum][0] == 0){
//If it's a correct answer
		if (I[QNum][1][ANum][2] == 1){
			Status[QNum][0] = 1;//Mark the Q as done
			Status[QNum][1][ANum] = 'R';
			MarkAnswer(QNum, ANum, true);
//Calculate the score for this question as a floating-point fraction of 1
			var PossibleWrongs = 0;
			for (var i=0; i<I[QNum][1].length; i++){
				if (I[QNum][1][i][2] == 0){
					PossibleWrongs++;
				}
			}

			if (PossibleWrongs == 0){PossibleWrongs = 1;}

			Status[QNum][3] = 1 - (Status[QNum][2]/PossibleWrongs);

//If less than zero, set to zero
			if (Status[QNum][3] < 0){Status[QNum][3] = 0;}
		}
		else{
			if (Status[QNum][1][ANum] != 'W'){
				Status[QNum][1][ANum] = 'W';
				MarkAnswer(QNum, ANum, false);
				Status[QNum][2]++; //increment wrong tries for this Q
			}
		}
	}

	UpdateQuestionStatus(QNum);

//Check whether the quiz is finished
	var Finished = true;
	for (var i=0; i<Status.length; i++){
		if (Status[i][0] == 0){Finished = false;}

	}

//Calculate the score if needed
		
	if (Status[QNum][0] == 1){
		if ((Finished==true)||(ContinuousScoring==true)){
			CalculateScore();
			Output = Output + '<br />' + YourScoreIs + ' ' + Score + '%.';
		}

		if (Finished == true){
			EraseFeedback = false;
			var CFT = 0;
			for (i=0; i<I.length; i++){
				if (Status[i][2] == 0){
					CFT++;
				}
			}
		Output += '<br />' + CorrectFirstTime + CFT + '/' + I.length;

		}
	}

//Show the feedback
	if (Output.length > 0){
		WriteFeedback(Output);
	}
}

function CalculateScore(){
	var TriedQs = 0;
	var TotalScore = 0;
	for (var i=0; i<Status.length; i++){
		if ((Status[i][2] > 0)||(Status[i][3] == 1)){
			TriedQs++;
			TotalScore += Status[i][3];
		}
	}
	if (TriedQs == 0){
		Score = 0;
	}
	else{
		Score = (Math.floor(100 * (TotalScore/TriedQs)));
	}
}

function MarkAnswer(QNum, ANum, Right){
	var Mark = CorrectIndicator;
	if (Right == false){Mark = IncorrectIndicator;}

	if (eval('BottomFrame.document.QForm.FB_' + QNum + '_' + ANum) != null){
		eval('BottomFrame.document.QForm.FB_' + QNum + '_' + ANum).value = Mark;
	}
}

function CheckCheckbox(QNum, ANum){
	if (eval('BottomFrame.document.QForm.A_' + QNum + '_' + ANum) != null){
		eval('BottomFrame.document.QForm.A_' + QNum + '_' + ANum).checked = true;
	}
}







function Blank(){
	return '<html><body>&copy;Half-Baked Software. Loading...</body></html>';
}

//-->

//]]>

</script>


</head>
<!--<body>Fool those dumb ad-inserting ISPs</body>-->

<!--For full XHTML 1.0 compatibility, remove the border and framespacing attributes.
These are required for proper display in current browsers, but render the document incompatible. Then, you'll need to add the appropriate Document Type Declaration; use
the W3C XHTML 1 frameset DTD.-->


<frameset rows="25%,*" onload="StartUp()" framespacing="0" border="0">
	<frame src="javascript:parent.Blank()" frameborder="0" name="TopFrame"></frame>
	<frame src="javascript:parent.Blank()" frameborder="0" name="BottomFrame"></frame>
</frameset>





<!-- Mirrored from www.cmass.edu.hk/~ts/exercises/S5/McNetwork/Network03.htm by HTTrack Website Copier/3.x [XR&CO'2008], Wed, 19 Aug 2009 02:27:57 GMT -->
</html>
